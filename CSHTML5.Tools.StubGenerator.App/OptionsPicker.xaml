<Window x:Class="DotNetForHtml5.PrivateTools.OptionsPicker"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DotNetForHtml5.PrivateTools"
        mc:Ignorable="d"
        Title="Options" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="0,10,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Method options"/>
            <ComboBox Grid.Row="1" SelectionChanged="MethodOptionsSelectionChanged" SelectedIndex="0">
                <ComboBoxItem Content="Default Value" ToolTip="Methods will return the default value of their return type."/>
                <ComboBoxItem Content="Defalut Value Not Null" ToolTip="Methods will call the base constructor of their return type (when possible). It can be usefull when we are dealing with collections."/>
                <ComboBoxItem Content="NotImplementedException" ToolTip="Every method body will be filled with 'throw new NotImplementedException();'"/>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="1" Margin="0,10,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Property options"/>
            <ComboBox Grid.Row="1" SelectionChanged="PropertyOptionsSelectionChanged" SelectedIndex="0">
                <ComboBoxItem Content="Private field" ToolTip="A private field will be created when creating a property."/>
                <ComboBoxItem Content="Default Value" ToolTip="Getters and Setters will return the default value of the property type."/>
                <ComboBoxItem Content="Defalut Value Not Null" ToolTip="Getters and Setters will call the base constructor of the property type (when possible). It can be usefull when we are dealing with collections."/>
                <ComboBoxItem Content="NotImplementedException" ToolTip="Getters and Setters will throw a new NotImplementedException()."/>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="2" Margin="0,10,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Events options"/>
            <ComboBox Grid.Row="2" SelectionChanged="EventOptionsSelectionChanged" SelectedIndex="0">
                <ComboBoxItem Content="Auto implemented" ToolTip="Events are auto implemented (i.e. add() and remove() methods are not explicitly defined)."/>
                <ComboBoxItem Content="Empty" ToolTip="Generate empty add() and remove() methods."/>
                <ComboBoxItem Content="NotImplementedException" ToolTip="add() and remove() methods will throw a new NotImplementedException()."/>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="3" Margin="0,10,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Show full type name (i.e namespace + type name)"/>
            <CheckBox Grid.Column="1" Checked="ShowFullTypeNameChecked" Unchecked="ShowFullTypeNameUnchecked"/>
        </Grid>
        <Grid Grid.Row="4" Margin="0,10,10,0" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Generate only public and protected members."/>
            <CheckBox Grid.Column="1" IsChecked="True" Checked="GenerateOnlyPublicMembersChecked" Unchecked="GenerateOnlyPublicMembersUnchecked"/>
        </Grid>
        <Grid Grid.Row="5" Margin="0,10,10,0" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="OK" HorizontalAlignment="Left" Padding="10,6" Click="ValidateButtonClick"/>
            <Button Grid.Column="1" Content="Cancel" HorizontalAlignment="Left" Padding="10,6" Click="CancelButtonClick" Margin="10,0,0,0"/>
        </Grid>
    </Grid>
</Window>
